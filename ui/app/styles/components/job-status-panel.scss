.job-status-panel {
  .select-mode {
    border: 1px solid $grey-blue;
    background: rgba(0, 0, 0, 0.05);
    border-radius: 2px;
    display: grid;
    gap: 0.5rem;
    grid-template-columns: 1fr 1fr;
    padding: 0.25rem 0.5rem;
    margin-left: 1rem;

    button {
      height: auto;
      padding: 0 0.5rem;
      background: transparent;
      transition: 0.1s;

      &:hover {
        background: rgba(255, 255, 255, 0.5);
      }

      &.is-active {
        background: $white;
      }
    }
  }

  .running-allocs-title {
    strong {
      font-weight: 800;
    }
  }

  .ungrouped-allocs {
    display: grid;
    gap: 10px;
    grid-auto-flow: column;
    grid-auto-columns: minmax(1px, 32px);
    margin-bottom: 1rem;

    & > .represented-allocation {
      width: auto;
    }
  }

  .alloc-status-summaries {
    display: flex;
    height: 32px;
    gap: 1.5rem;
    margin-bottom: 1rem;

    .allocation-status-block {
      display: grid;
      grid-template-columns: auto 50px;
      gap: 10px;

      &.rest-only {
        grid-template-columns: auto;
      }

      & > .ungrouped-allocs {
        display: grid;
        grid-auto-flow: column;
        gap: 10px;
        grid-auto-columns: unset;
        & > .represented-allocation {
          width: 32px;
        }
      }

      .represented-allocation.rest {
        font-size: 0.8rem;
        text-align: center;
        display: grid;
        align-content: center;
        font-weight: bold;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
        width: 100%;

        &.unplaced {
          color: black;
        }
      }
    }
  }

  .represented-allocation {
    background: $green;
    border-radius: 4px;
    height: 32px;
    width: 32px;
    color: white;

    $queued: $grey;
    $pending: $grey-lighter;
    $running: $primary;
    $complete: $nomad-green-dark;
    $failed: $danger;
    $lost: $dark;

    &.running {
      background: $running;
    }
    &.failed {
      background: $failed;
    }
    &.unknown {
      background: $unknown;
    }
    &.queued {
      background: $queued;
    }
    &.complete {
      background: $complete;
    }
    &.pending {
      background: $pending;
      color: black;
    }
    &.lost {
      background: $lost;
    }

    &.unplaced {
      background: transparent;
      border: 2px solid $grey-lighter;
    }
  }

  & > .boxed-section-body > .sub-panels {
    display: grid;
    gap: 0.5rem;
    grid-template-columns: 50% 50%;

    legend {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 0.5rem;

      .legend-item {
        display: grid;
        gap: 0.5rem;
        grid-template-columns: auto 1fr;

        &.faded {
          opacity: 0.5;
        }

        .represented-allocation {
          width: 20px;
          height: 20px;
        }
      }
    }

    .versions {
      h4 {
        margin-bottom: 0.5rem;
      }

      & > ul {
        display: grid;
        grid-template-columns: repeat(auto-fit, 100px);
        gap: 0.5rem;
        & > li {
          white-space: nowrap;
        }
      }
    }
  }

  .active-deployment-info-panels {
    display: grid;
    grid-template-columns: 70% auto;
    gap: 1rem;
    margin-top: 2rem; // TODO: grid-ify the deployment panel generally and just use gap for this
  }

  .deployment-history {
    & > header {
      display: grid;
      grid-template-columns: 1fr 2fr;
      gap: 1rem;
      margin-bottom: 1rem;
      align-items: end;
      & > .search-box {
        max-width: unset;
      }
    }
    & > ol {
      max-height: 300px;
      overflow-y: auto;
    }
    & > ol > li {
      @for $i from 1 through 50 {
        &:nth-child(#{$i}) {
          animation-name: historyItemSlide;
          animation-duration: 0.2s;
          animation-fill-mode: both;
          animation-delay: 0.1s + (0.05 * $i);
        }

        &:nth-child(#{$i}) > div {
          animation-name: historyItemShine;
          animation-duration: 1s;
          animation-fill-mode: both;
          animation-delay: 0.1s + (0.05 * $i);
        }
      }

      & > div {
        gap: 0.5rem;
      }
      &.error > div {
        border: 1px solid $danger;
        background: rgba($danger, 0.1);
      }
    }
  }

  .update-parameters {
    & > code {
      max-height: 300px;
      overflow-y: auto;
      display: block;
    }
    ul,
    span.notification {
      display: block;
      background: #1a2633;
      padding: 1rem;
      color: white;
      .key {
        color: #1caeff;
        &:after {
          content: '=';
          color: white;
          margin-left: 0.5rem;
        }
      }
      .value {
        color: #06d092;
      }
    }
  }
}

@keyframes historyItemSlide {
  from {
    opacity: 0;
    top: 40px;
  }
  to {
    opacity: 1;
    top: 0px;
  }
}

@keyframes historyItemShine {
  from {
    box-shadow: inset 0 0 0 100px rgba(255, 200, 0, 0.2);
  }
  to {
    box-shadow: inset 0 0 0 100px rgba(255, 200, 0, 0);
  }
}
